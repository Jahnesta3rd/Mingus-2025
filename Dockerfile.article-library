# =====================================================
# MINGUS ARTICLE LIBRARY - DOCKERFILE
# =====================================================
# Multi-stage build for optimized production deployment

# Stage 1: Base Python Environment
FROM python:3.11-slim as base

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    libpq-dev \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Stage 2: Dependencies
FROM base as dependencies

# Copy requirements files
COPY requirements.txt .
COPY requirements-test.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Stage 3: Development (optional)
FROM dependencies as development

# Install development dependencies
RUN pip install --no-cache-dir -r requirements-test.txt

# Copy source code
COPY . .

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/static /app/instance

# Set permissions
RUN chmod +x /app/mingus

# Stage 4: Production
FROM dependencies as production

# Create non-root user
RUN groupadd -r mingus && useradd -r -g mingus mingus

# Copy application code
COPY --chown=mingus:mingus . .

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/static /app/instance \
    && chown -R mingus:mingus /app

# Switch to non-root user
USER mingus

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Default command
CMD ["python", "-m", "flask", "run", "--host=0.0.0.0", "--port=5000"]
