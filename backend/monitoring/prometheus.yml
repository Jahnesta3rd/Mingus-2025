global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'mingus_financial'
    environment: 'production'

rule_files:
  - "rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # Flask Application
  - job_name: 'flask_app'
    static_configs:
      - targets: ['host.docker.internal:5001']  # Flask app running on host
    metrics_path: '/monitoring/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    honor_labels: true
    metrics_path: '/metrics'  # Prometheus metrics endpoint
    scrape_interval: 15s
    scrape_timeout: 10s
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '(.+)'
        replacement: 'flask_app_${1}'

  # Node Exporter (System metrics)
  - job_name: 'node_exporter'
    static_configs:
      - targets: ['node_exporter:9100']
    scrape_interval: 30s
    scrape_timeout: 10s
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '(.+)'
        replacement: 'system_${1}'

  # PostgreSQL Exporter
  - job_name: 'postgres_exporter'
    static_configs:
      - targets: ['postgres_exporter:9187']
    scrape_interval: 30s
    scrape_timeout: 10s
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '(.+)'
        replacement: 'postgres_${1}'

  # Redis Exporter
  - job_name: 'redis_exporter'
    static_configs:
      - targets: ['redis_exporter:9121']
    scrape_interval: 30s
    scrape_timeout: 10s
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '(.+)'
        replacement: 'redis_${1}'

  # cAdvisor (Container metrics)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    scrape_timeout: 10s
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '(.+)'
        replacement: 'containers_${1}'

  # Alert Manager
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    scrape_interval: 30s
    scrape_timeout: 10s
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '(.+)'
        replacement: 'alertmanager_${1}'

  # Grafana
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 30s
    scrape_timeout: 10s
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '(.+)'
        replacement: 'grafana_${1}'

  # Elasticsearch (if enabled)
  - job_name: 'elasticsearch'
    static_configs:
      - targets: ['elasticsearch:9200']
    metrics_path: '/_prometheus/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '(.+)'
        replacement: 'elasticsearch_${1}'

  # Blackbox exporter for HTTP health checks (optional)
  - job_name: 'blackbox_http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://flask_app:5001/health
        - http://postgres:5432
        - http://redis:6379
        - http://prometheus:9090
        - http://grafana:3000
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox:9115

  # Service discovery for dynamic targets (optional)
  - job_name: 'docker_swarm'
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        port: 2375
        filters:
          - name: name
            values: ['.*']
    relabel_configs:
      - source_labels: [__meta_docker_container_name]
        regex: '(.+)'
        target_label: container
      - source_labels: [__meta_docker_container_image]
        regex: '(.+)'
        target_label: image
      - source_labels: [__meta_docker_container_label_com_docker_swarm_service_name]
        target_label: service

# Recording rules for common queries
rule_files:
  - "rules/*.yml"

# Alerting rules
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      scheme: http
      timeout: 10s
      api_version: v1

# Storage configuration
storage:
  tsdb:
    path: /prometheus
    retention.time: 30d
    retention.size: 10GB
    min_block_duration: 2h
    max_block_duration: 24h

# Remote write configuration (optional - for long-term storage)
remote_write:
  - url: "http://remote_storage:9201/api/v1/write"
    remote_timeout: 30s
    write_relabel_configs:
      - source_labels: [__name__]
        regex: '.*'
        action: keep

# Remote read configuration (optional)
remote_read:
  - url: "http://remote_storage:9201/api/v1/read"
    remote_timeout: 30s
    read_recent: true

# Web configuration
web:
  listen_address: '0.0.0.0:9090'
  external_url: 'http://localhost:9090'
  route_prefix: /
  enable_lifecycle: true
  enable_admin_api: true
  console_libraries: /etc/prometheus/console_libraries
  console_templates: /etc/prometheus/consoles
  max_connections: 512
  read_timeout: 300s
  write_timeout: 300s
  idle_timeout: 120s

# Logging configuration
log:
  level: info
  format: json
  output: stdout

# Time series database configuration
tsdb:
  retention.time: 30d
  retention.size: 10GB
  min_block_duration: 2h
  max_block_duration: 24h
  out_of_order_time_window: 10m
  wal_compression: true
  head_compaction_interval: 1m
  head_compaction_concurrency: 1
  head_compaction_validate_interval: 5m
  min_stale_marks: 100
  max_stale_marks: 1000
  stale_marks_threshold: 0.1
  out_of_order_time_window: 10m
